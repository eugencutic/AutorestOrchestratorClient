// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace AutorestOrchestratorClient.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class IEdmStructuralProperty
    {
        /// <summary>
        /// Initializes a new instance of the IEdmStructuralProperty class.
        /// </summary>
        public IEdmStructuralProperty()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the IEdmStructuralProperty class.
        /// </summary>
        /// <param name="propertyKind">Possible values include: 'None',
        /// 'Structural', 'Navigation'</param>
        public IEdmStructuralProperty(string defaultValueString = default(string), IEdmStructuralPropertyPropertyKind? propertyKind = default(IEdmStructuralPropertyPropertyKind?), IEdmTypeReference type = default(IEdmTypeReference), IEdmStructuredType declaringType = default(IEdmStructuredType), string name = default(string))
        {
            DefaultValueString = defaultValueString;
            PropertyKind = propertyKind;
            Type = type;
            DeclaringType = declaringType;
            Name = name;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DefaultValueString")]
        public string DefaultValueString { get; private set; }

        /// <summary>
        /// Gets possible values include: 'None', 'Structural', 'Navigation'
        /// </summary>
        [JsonProperty(PropertyName = "PropertyKind")]
        public IEdmStructuralPropertyPropertyKind? PropertyKind { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Type")]
        public IEdmTypeReference Type { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DeclaringType")]
        public IEdmStructuredType DeclaringType { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Name")]
        public string Name { get; private set; }

    }
}
