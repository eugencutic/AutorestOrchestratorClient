// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace AutorestOrchestratorClient.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class IEdmEntityContainerElement
    {
        /// <summary>
        /// Initializes a new instance of the IEdmEntityContainerElement class.
        /// </summary>
        public IEdmEntityContainerElement()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the IEdmEntityContainerElement class.
        /// </summary>
        /// <param name="containerElementKind">Possible values include: 'None',
        /// 'EntitySet', 'ActionImport', 'FunctionImport', 'Singleton'</param>
        public IEdmEntityContainerElement(IEdmEntityContainerElementContainerElementKind? containerElementKind = default(IEdmEntityContainerElementContainerElementKind?), IEdmEntityContainer container = default(IEdmEntityContainer), string name = default(string))
        {
            ContainerElementKind = containerElementKind;
            Container = container;
            Name = name;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets possible values include: 'None', 'EntitySet', 'ActionImport',
        /// 'FunctionImport', 'Singleton'
        /// </summary>
        [JsonProperty(PropertyName = "ContainerElementKind")]
        public IEdmEntityContainerElementContainerElementKind? ContainerElementKind { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Container")]
        public IEdmEntityContainer Container { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Name")]
        public string Name { get; private set; }

    }
}
